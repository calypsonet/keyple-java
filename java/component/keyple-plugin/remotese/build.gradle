plugins {
    id 'maven-publish'
}
apply plugin: 'java'
sourceCompatibility = 1.6
project.version '0.1.0-SNAPSHOT'
apply plugin: 'java-library'


//Create jar for Native Reader Client
task nativeJar(type: Jar, group: 'build') {

    baseName project.name+ "-native-reader"

    //define classes to be included
    from(sourceSets.main.output) {
        include "org/eclipse/keyple/plugin/remotese/nativese/**"
    }

    //include META-INF resources copied by copyLICENSE and copyNOTICE tasks
    into 'META-INF', {
        from "${buildDir}/resources/main/META-INF/"
    }

    manifest {
        attributes 'Implementation-Title': 'Keyple Remote SE - Native Reader',
                'Implementation-Version': project.version
    }
}

//Create jar for Remote SE Plugin
task pluginJar(type: Jar, group: 'build') {

    baseName project.name+ "-plugin"

    //define classes to be included
    from(sourceSets.main.output) {
        include "org/eclipse/keyple/plugin/remotese/pluginse/**"
    }

    //include META-INF resources copied by copyLICENSE and copyNOTICE tasks
    into 'META-INF', {
        from "${buildDir}/resources/main/META-INF/"
    }

    manifest {
        attributes 'Implementation-Title': 'Keyple Remote SE - Plugin',
                'Implementation-Version': project.version
    }

}

//Create jar for Transport classes
task transportJar(type: Jar, group: 'build') {

    baseName project.name+ "-transport-api"

    //define classes to be included
    from(sourceSets.main.output) {
        include "org/eclipse/keyple/plugin/remotese/transport/**"
    }

    //include META-INF resources copied by copyLICENSE and copyNOTICE tasks
    into 'META-INF', {
        from "${buildDir}/resources/main/META-INF/"
    }

    manifest {
        attributes 'Implementation-Title': 'Keyple Remote SE - Transport',
                'Implementation-Version': project.version
    }

}

//copy license file from root folder to each generated artifact
task copyLICENSE(type: Copy) {
    from file("${projectDir}/../../../../LICENSE")
    into file("${buildDir}/resources/main/META-INF/")
}

//copy notice file from root folder to each generated artifact
task copyNOTICE(type: Copy) {
    from file("${projectDir}/../../../../NOTICE.md")
    into file("${buildDir}/resources/main/META-INF/")
}

pluginJar.dependsOn copyLICENSE, copyNOTICE
transportJar.dependsOn copyLICENSE, copyNOTICE
nativeJar.dependsOn copyLICENSE, copyNOTICE


configurations {
    nativeJarArtifact.extendsFrom runtime
    pluginJarArtifact.extendsFrom runtime
    transportJarArtifact.extendsFrom runtime
}
artifacts {
    nativeJarArtifact nativeJar
    pluginJarArtifact pluginJar
    transportJarArtifact transportJar
}


publishing {
    //publish Native SE Client
    publications {
        customPluginJar(MavenPublication) {
            groupId = project.group
            artifactId = pluginJar.baseName
            version = project.version
            artifact pluginJar
            //add dependencies to pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the implementation dependencies, adding keyple-core and slf4j
                configurations.implementation.allDependencies.each {
                    if(it.name == 'keyple-core' || it.name == 'slf4j-api'){
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    //publish Remote SE Plugin
    publications {
        customNativeJar(MavenPublication) {
            groupId = project.group
            artifactId = nativeJar.baseName
            version = project.version
            artifact nativeJar

            //add dependencies to pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the implementation dependencies, adding keyple-core and slf4j
                configurations.implementation.allDependencies.each {
                    if(it.name == 'keyple-core' || it.name == 'slf4j-api'){
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    //publish Remote SE Transport
    publications {
        customTransportJar(MavenPublication) {
            groupId = project.group
            artifactId = transportJar.baseName
            version = project.version
            artifact transportJar

            //add dependencies to pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the implementation dependencies, adding gson and keyple-core only
                configurations.implementation.allDependencies.each {
                    if(it.name == 'gson' || it.name == 'keyple-core'){
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}


dependencies {
    //use java library : keyple core
    //implementation 'org.eclipse.keyple:keyple-core:1.+'
    implementation project(path:':java:component:keyple-core')


    implementation "com.google.code.gson:gson:${gson_version}"
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    api "org.slf4j:slf4j-api:${slf4japi_version}"
    /*
        Tests
         */
    //add slf4j simple logger implementation
    testImplementation "org.slf4j:slf4j-simple:${slf4jsimple_version}"
    // https://mvnrepository.com/artifact/junit/junit
    testImplementation "junit:junit:${junit_version}"
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation "org.mockito:mockito-core:${mockitocore_version}"

    //use keyple library : keyple plugin stub unit tests
    testImplementation project(path: ':java:component:keyple-plugin:keyple-plugin-stub', configuration: 'testArtifacts')
    testImplementation project(path: ':java:component:keyple-plugin:keyple-plugin-stub')

    //use keyple library : keyple calypso
    //testImplementation 'org.eclipse.keyple:keyple-calypso:1.+'
    testImplementation project(path:':java:component:keyple-calypso')

}
